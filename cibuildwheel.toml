[tool.cibuildwheel]
# 构建的平台
build = ["cp38-*", "cp39-*", "cp310-*", "cp311-*", "cp312-*"]

# 跳过的构建
skip = [
    "*-win32",           # 跳过32位Windows
    "*-manylinux_i686",  # 跳过32位Linux  
    "*-musllinux_i686",  # 跳过32位musl Linux
    "pp*",               # 跳过PyPy
]

# 构建设置
build-verbosity = 1

# 环境变量
[tool.cibuildwheel.environment]
# Rust环境变量
CARGO_NET_GIT_FETCH_WITH_CLI = "true"

# Linux设置
[tool.cibuildwheel.linux]
before-all = [
    "curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain stable -y",
    "yum install -y openssl-devel || (apt-get update && apt-get install -y libssl-dev)",
]
environment = { PATH = "$PATH:$HOME/.cargo/bin" }

# Windows设置  
[tool.cibuildwheel.windows]
before-all = [
    "rustup-init.exe -y --default-toolchain stable",
    "rustup target add x86_64-pc-windows-msvc",
]
environment = { PATH = "$PATH;$USERPROFILE\\.cargo\\bin" }

# macOS设置
[tool.cibuildwheel.macos]
before-all = [
    "curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain stable -y",
]
environment = { PATH = "$PATH:$HOME/.cargo/bin" }

# 测试设置
[tool.cibuildwheel.test-requires]
pytest = "*"

[tool.cibuildwheel.test-command]
python = "-c \"import hive_reader_rs; print('✅ 导入成功')\""
