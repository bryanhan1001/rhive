name: Code Quality Check

on:
  # 推送到主分支时检查
  push:
    branches: [ main, master ]
  # PR时检查
  pull_request:
    branches: [ main, master ]
  # 手动触发
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  # 代码质量检查
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy
    
    # 使用Cargo.lock确保依赖版本一致
    - name: Rust Cache
      uses: Swatinem/rust-cache@v2
      with:
        # 基于Cargo.lock生成额外缓存标识
        shared-key: ${{ hashFiles('**/Cargo.lock') }}
        # 清理旧缓存，确保依赖版本一致
        cache-all-crates: "true"
    
    - name: Check formatting
      run: cargo fmt --all -- --check
    
    # Clippy检查（与本地命令完全一致）
    - name: Clippy
      run: |
        cargo clippy --version
        cargo clippy --all-targets --all-features -- -D warnings
    
    - name: Test
      run: cargo test --verbose
    
    - name: Install Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install maturin polars
    
    - name: Build test (no wheel)
      run: |
        maturin develop --release
    
    - name: Python test
      run: |
        python test_rust_extension.py
